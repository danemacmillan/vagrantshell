#!/usr/bin/env bash

server=$1
vhostname=$2
docroot="/vagrant/sites/$vhostname"
vhostfile="/vagrant/$server/vhosts/$vhostname.vagrant.dev.$server.conf"

# Create the Document Root directory
sudo mkdir -p $docroot

# Assign ownership to your regular user account
#sudo chown -R $USER:$USER $docroot

# Create the Nginx server block file:
sudo tee $vhostfile > /dev/null <<EOF
##
# http
#
server {
    listen       80;
    server_name  $vhostname.vagrant.dev;

    access_log /vagrant/logs/nginx.access.$vhostname.log main;
    error_log /vagrant/logs/nginx.error.$vhostname.log warn;

    root   $docroot;
    index  index.php;

    autoindex on;
    sendfile off;
    disable_symlinks off;

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        access_log off;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, max-age=315360000";
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        expires off;
        #fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_keep_conn on;
        fastcgi_index  index.php;
        include        fastcgi_params;
        fastcgi_read_timeout 6000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;

        #Magento
        fastcgi_param MAGE_RUN_CODE default; # Store code is defined in administration > Configuration > Manage Stores
        fastcgi_param MAGE_RUN_TYPE store;
    }

    # Magento-specific
    location ~ (^/(app/\|includes/\|lib/\|/pkginfo/\|var/\|report/config.xml)\|/\.svn/\|/\.git/\|/.hta.+) {
        deny all; #ensure sensitive files are not accessible
    }

    # Rewrite URLs for Magento
    location / {
        try_files $uri $uri/ /index.php?$args; # make index.php handle requests for /
    }
}

##
# https
#
server {
    listen       443 ssl;
    server_name  $vhostname.vagrant.dev;

    access_log /vagrant/logs/nginx.access.$vhostname.log main;
    error_log /vagrant/logs/nginx.error.$vhostname.log warn;

    root   $docroot;
    index  index.php;

    autoindex on;
    sendfile off;
    disable_symlinks off;

    ssl on;
    ssl_certificate    /vagrant/ssl/vagrant.dev.crt;
    ssl_certificate_key  /vagrant/ssl/vagrant.dev.key;
    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    #ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_session_timeout 5m;
    # enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    #ssl_prefer_server_ciphers on;
    # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ciphers chosen for forward secrecy and compatibility
    # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
    #ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256";

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        access_log off;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, max-age=315360000";
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        expires off;
        #fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_keep_conn on;
        fastcgi_index  index.php;
        include        fastcgi_params;
        fastcgi_read_timeout 6000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;

        #Magento
        fastcgi_param MAGE_RUN_CODE default; # Store code is defined in administration > Configuration > Manage Stores
        fastcgi_param MAGE_RUN_TYPE store;
        fastcgi_param HTTPS on;
    }

    # Magento-specific
    location ~ (^/(app/\|includes/\|lib/\|/pkginfo/\|var/\|report/config.xml)\|/\.svn/\|/\.git/\|/.hta.+) {
        deny all; #ensure sensitive files are not accessible
    }

    # Rewrite URLs for Magento
    location / {
        try_files $uri $uri/ /index.php?$args; # make index.php handle requests for /
    }
}

EOF

# Test configuration and reload if successful
sudo nginx -t && sudo /etc/init.d/nginx reload
