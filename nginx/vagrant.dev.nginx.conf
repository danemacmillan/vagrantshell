##
# root http
# Access vagrant.dev for seeing phpinfo().
#
# This exists simply to list off all the vhosts and phpinfo. Create the
# appropriate directories within `sites` to host projects.
#
server {
    listen       80;
    server_name  vagrant.dev;

    root   /vagrant/sites;
    index  index.php;

    autoindex on;
    sendfile off;
    disable_symlinks off;

    etag off;
    server_tokens off;

    gzip on;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css application/x-javascript text/javascript application/javascript application/xml+rss;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_static on;

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        expires off;
        fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
        #fastcgi_pass   127.0.0.1:9000;
        fastcgi_keep_conn on;
        fastcgi_index  index.php;
        include        fastcgi_params;
#        fastcgi_read_timeout 6000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }
}


##
# Drop new vhosts into the vhosts directory and they will become available
# to `nginx` after a `reload/restart`. Be sure that a corresponding directory
# exists in `sites`.
# Note: this is just if the wildcard vhosts above are not enough. For example,
# if you need one vhost will very different configurations.
# These configs will trump any matching configs from the wildcards below.
include /vagrant/nginx/vhosts/*.conf;


##
# Wildcards: http://nginx.org/en/docs/http/server_names.html
#
# TODO: consolidate duplicated configs below into external include.
#

##
# wildcard HTTP
#
server {
    listen       80;
    server_name  ~^(?<domainname>.+)$;

    access_log /vagrant/logs/$domainname.nginx.access.log main;
    error_log /vagrant/logs/nginx.error.log warn;

    root   /vagrant/sites/$domainname;
    index  index.php;

    autoindex on;
    sendfile off;
    disable_symlinks off;

    etag off;
    server_tokens off;

    gzip on;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css application/x-javascript text/javascript application/javascript application/xml+rss;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_static on;

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        access_log off;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, max-age=315360000";
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        expires off;
        fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
        #fastcgi_pass   127.0.0.1:9000;
        fastcgi_keep_conn on;
        fastcgi_index  index.php;
        include        fastcgi_params;
       # fastcgi_read_timeout 6000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;

        #Magento
        fastcgi_param MAGE_RUN_CODE default; # Store code is defined in administration > Configuration > Manage Stores
        fastcgi_param MAGE_RUN_TYPE store;
    }

    # Magento-specific
    location ~ (^/(app/\|includes/\|lib/\|/pkginfo/\|var/\|report/config.xml)\|/\.svn/\|/\.git/\|/.hta.+) {
        deny all; #ensure sensitive files are not accessible
    }

    # Rewrite URLs for Magento
    location / {
        try_files $uri $uri/ /index.php?$args; # make index.php handle requests for /
    }
}

##
# wildcard HTTPS SPDY
#
server {
    listen       443 ssl spdy;
    server_name  ~^(?<domainname>.+)$;

    access_log /vagrant/logs/$domainname.nginx.access.log main;
    error_log /vagrant/logs/nginx.error.log warn;

    root   /vagrant/sites/$domainname;
    index  index.php;

    autoindex on;
    sendfile off;
    disable_symlinks off;

    etag off;
    server_tokens off;

    gzip on;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css application/x-javascript text/javascript application/javascript application/xml+rss;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_static on;

    ssl on;
    ssl_certificate    /vagrant/ssl/_.vagrant.dev.crt;
    ssl_certificate_key  /vagrant/ssl/_.vagrant.dev.key;
    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    #ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_session_timeout 5m;
    # enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    #ssl_prefer_server_ciphers on;
    # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ciphers chosen for forward secrecy and compatibility
    # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
    #ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256";

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        access_log off;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, max-age=315360000";
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        expires off;
        fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
        #fastcgi_pass   127.0.0.1:9000;
        fastcgi_keep_conn on;
        fastcgi_index  index.php;
        include        fastcgi_params;
       # fastcgi_read_timeout 6000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;

        #Magento
        fastcgi_param MAGE_RUN_CODE default; # Store code is defined in administration > Configuration > Manage Stores
        fastcgi_param MAGE_RUN_TYPE store;
        fastcgi_param HTTPS on;
    }

    # Magento-specific
    location ~ (^/(app/\|includes/\|lib/\|/pkginfo/\|var/\|report/config.xml)\|/\.svn/\|/\.git/\|/.hta.+) {
        deny all; #ensure sensitive files are not accessible
    }

    # Rewrite URLs for Magento
    location / {
        try_files $uri $uri/ /index.php?$args; # make index.php handle requests for /
    }
}
